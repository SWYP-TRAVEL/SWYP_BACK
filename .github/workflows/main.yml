# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Package

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:

    runs-on: [self-hosted, linux]
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Grant execute permission
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build
        env:
          KAKAO_API_KEY: ${{secrets.KAKAO_API_KEY}}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          JWT_SECRET_KEY: ${{secrets.JWT_SECRET_KEY}}


      - name: Build Docker image # repo 이름이 소문자여야됨.
        run: |
          docker build -t ghcr.io/swyp-travel/my-app:${{ github.sha }} .

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_ACCESS_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push Docker image
        run: |
          docker tag ghcr.io/swyp-travel/my-app:${{ github.sha }} ghcr.io/swyp-travel/my-app:latest
          docker push ghcr.io/swyp-travel/my-app:${{ github.sha }}
          docker push ghcr.io/swyp-travel/my-app:latest

      - name: Deploy on Server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: ~/deploy.sh

      - name: Start containers
        run: docker-compose up -d --build